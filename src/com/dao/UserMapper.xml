<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.UserMapper">
	<select id="selectNamepwd" resultType="backenduser">
		select b.*,d.valueName as userTypeName from backend_user b,data_dictionary d
		where  b.userType = d.valueId and d.typeCode = 'USER_TYPE'
		<if test="userCode != null">
			and b.userCode=#{userCode}
		</if>
		<if test="userPassword != null">
			and b.userPassword =#{userPassword}
		</if>
	</select>
	
	<select id="getInfoList" resultType="info">
		select a.id, a.softwareName,a.APKName,a.supportROM,a.softwareSize,a.devId,
				(select devName from dev_user where id = a.devId) as devName,
				a.status,
				(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
				a.flatformId,
				(select valueName from data_dictionary d where  a.flatformId=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
				a.categoryLevel1,
				(select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
				a.categoryLevel2,
				(select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
				a.categoryLevel3,
				(select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
				a.downloads,
				a.onSaleDate,
				a.versionId,
				(select v.versionNo from app_version v where v.id=a.versionId ) as versionNo
			from  app_info a
			<trim prefix="where" prefixOverrides="and | or">
			<if test="softwareName != null and softwareName != ''">
				and a.softwareName like CONCAT ('%',#{softwareName},'%')
			</if>
			<if test="categoryLevel1 != null and categoryLevel1 != ''">
				and a.categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != null and categoryLevel2 != ''">
				and a.categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != null and categoryLevel3 != ''">
				and a.categoryLevel3 = #{categoryLevel3}
			</if>
			<if test="flatformId != 0">
				and a.flatformId = #{flatformId}
			</if>
			<if test="status != 0">
				and a.status = #{status}
			</if>
		</trim>
		order by creationDate DESC limit #{currentPageNo},#{pageSize}
	</select>
	
	<select id="getInfoCount" resultType="int">
		select count(*) as count from app_info a
			<trim prefix="where" prefixOverrides="and | or">
			<if test="softwareName != null and softwareName != ''">
				and a.softwareName like CONCAT ('%',#{softwareName},'%')
			</if>
			<if test="categoryLevel1 != null and categoryLevel1 != ''">
				and a.categoryLevel1 = #{categoryLevel1}
			</if>
			<if test="categoryLevel2 != null and categoryLevel2 != ''">
				and a.categoryLevel2 = #{categoryLevel2}
			</if>
			<if test="categoryLevel3 != null and categoryLevel3 != ''">
				and a.categoryLevel3 = #{categoryLevel3}
			</if>
			<if test="flatformId != 0">
				and a.flatformId = #{flatformId}
			</if>
			<if test="status != 0">
				and a.status = #{status}
			</if>
		</trim>
	</select>
	<select id="list" resultType="dictionary">
	SELECT*from data_dictionary where typeCode=#{typeCode}
	</select>
	<select id="listcate" resultType="category">
	SELECT*from app_category 
	<where>
	<if test="parentId==0">
	  parentId is null
	  </if>
	  <if test="parentId!=0">
	   and parentId=#{parentId}
	  </if>
	  </where>
	</select>
	
	<select id="getappinfo" resultType="info">
		select * ,
			(select devName from dev_user where id = a.devId) as devName,
			(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_STATUS') as statusName,
			(select valueName from data_dictionary d where  a.status=d.valueId AND d.typeCode='APP_FLATFORM') as flatformName,
			(select categoryName from app_category c where  c.id=a.categoryLevel1) as categoryLevel1Name,
			(select categoryName from app_category c where  c.id=a.categoryLevel2) as categoryLevel2Name,
			(select categoryName from app_category c where  c.id=a.categoryLevel3) as categoryLevel3Name,
			(select v.versionNo from app_version v where v.id=a.versionId ) as versionNo
		  from app_info a
		  <trim prefix="where" prefixOverrides="and | or">
				<if test="id != null">
					and a.id = #{id}
				</if>
		  </trim>
	</select>
	<select id="getappversion" resultType="version">
		select * from app_version where id=#{id}
	</select>
	<update id="update">
		update app_info SET status = #{status} where id=#{id}
	</update>
</mapper>